import ROOT
inputFileName = "./input/example.root"
meas = ROOT.RooStats.HistFactory.Measurement("meas", "meas")
meas.SetOutputFilePrefix( "./results/example_" )
meas.SetPOI("mu")
meas.AddConstantParam("alpha_syst1")
meas.AddConstantParam("Lumi")
meas.SetLumi(1.0)
meas.SetLumiRelErr(0.10)
meas.SetExportOnly(False)
meas.SetBinHigh(2)
chan = ROOT.RooStats.HistFactory.Channel("channel1")
chan.SetData("data",inputFileName)
chan.SetStatErrorConfig(0.05, "Poisson")
sig = ROOT.RooStats.HistFactory.Sample( "signal", "signal", inputFileName )
sig.AddOverallSys("syst1",0.95,1.05)
sig.AddNormFactor("mu",1,0,3 )
chan.AddSample(sig)
background1 = ROOT.RooStats.HistFactory.Sample("background1","background1",inputFileName)
background1.ActivateStatError("background1_statUncert",inputFileName)
background1.AddOverallSys("syst2",0.95,1.05)
chan.AddSample(background1)
background2 = ROOT.RooStats.HistFactory.Sample( "background2", "background2", inputFileName )
background2.ActivateStatError()
background2.AddOverallSys("syst3",0.95,1.05)
chan.AddSample( background2)
meas.AddChannel( chan )
meas.CollectHistograms()

tool = ROOT.RooStats.HistFactory.JSONTool(meas)
tool.PrintYAML("hf.yml")
tool.PrintJSON("hf.js")

#w =  ROOT.RooStats.HistFactory.MakeModelAndMeasurementFast(meas)
#w.SetName("histfactory")
#w.data("obsData").SetName("observed_data")

#w.writeToFile("hf.root")
